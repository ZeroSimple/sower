version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout # check out the code in the project directory
      - run:
          name: Prepare Environment
          command: |
            cp conf/sower.toml .
            cp .circleci/* .
            mkdir artifacts
      - run:
          name: Run Unit Test
          command: |
            make test
      - run:
          name: Build linux Binary
          command: |
            GOOS=linux GOARCH=amd64 make build
            tar czvf artifacts/sower-linux-amd64.tar.gz sower sower.toml sower-client.service sower-server.service
            GOOS=linux GOARCH=386 make build
            tar czvf artifacts/sower-linux-386.tar.gz sower sower.toml sower-client.service sower-server.service
            GOOS=linux GOARCH=arm make build
            tar czvf artifacts/sower-linux-arm.tar.gz sower sower.toml sower-client.service sower-server.service
            GOOS=linux GOARCH=arm64 make build
            tar czvf artifacts/sower-linux-arm64.tar.gz sower sower.toml sower-client.service sower-server.service
            GOOS=linux GOARCH=mips make build
            tar czvf artifacts/sower-linux-mips.tar.gz sower sower.toml sower-client.service sower-server.service
            GOOS=linux GOARCH=mipsle make build
            tar czvf artifacts/sower-linux-mipsle.tar.gz sower sower.toml sower-client.service sower-server.service

      - run:
          name: Build macOS Binary
          command: |
            GOOS=darwin GOARCH=amd64 make build
            tar czvf artifacts/sower-darwin-amd64.tar.gz sower sower.toml cc.wweir.sower.plist

      - run:
          name: Build Windows Binary
          command: |
            GOOS=windows GOARCH=amd64 make build
            tar czvf artifacts/sower-windows-amd64.tar.gz sower.exe sower.toml
            GOOS=windows GOARCH=386 make build
            tar czvf artifacts/sower-windows-386.tar.gz sower.exe sower.toml

      - run:
          name: Publish Release on GitHub
          command: |
            git describe --tags | grep - && exit

            GHR_VERSION="$(curl -s "https://api.github.com/repos/tcnksm/ghr/releases/latest" | awk -F '"'  '/tag_name/{printf $4}')"
            curl -SLf https://github.com/tcnksm/ghr/releases/download/"$GHR_VERSION"/ghr_"$GHR_VERSION"_linux_amd64.tar.gz | tar xzC /go/bin --strip-components=1

            VERSION=$(git describe --tags)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION%-*-*} artifacts/
